from fastapi import FastAPI, HTTPException, Request
import uvicorn
from pydantic import BaseModel
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()     # –ó–∞–ø—É—Å–∫: uvicorn main:app --reload
# –ü—Ä–æ–≤–µ—Ä–∫–∞ - –∑–∞–ø—Ä–æ—Å—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Å —ç—Ç–æ–≥–æ –∞–¥—Ä–µ—Å–∞
app.add_middleware(CORSMiddleware, allow_origins=['http://127.0.0.1:8000'])

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (css, js, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
# app.mount("/static", StaticFiles(directory="static"), name="static")

templates = Jinja2Templates(directory="templates")  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Jinja2

books = [
    {
        'id': 1,
        'title': '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å –≤ –ü–∏—Ç–æ–Ω–µ',
        'author': 'Mathew'
    },
    {
        'id': 2,
        'title': '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ü–∏—Ç–æ–Ω–µ',
        'author': 'Dmitry'
    }
]


@app.get('/', response_class=HTMLResponse)
async def read_root(request: Request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ URL"""
    return templates.TemplateResponse("index.html", {"request": request, "books": books})


@app.get('/books', summary='–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥–∏', tags=['–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥–∏ üìö'])
def read_books():
    return books


@app.get('/books/{book_id}', summary='–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É', tags=['–Ω–∏–≥–∞'])
def get_book(book_id: int):
    for b in books:
        if b['id'] == book_id:
            return b
    raise HTTPException(status_code=404, detail='–Ω–µ—Ç –∫–Ω–∏–≥–∏')


class NewBook(BaseModel):
    title: str
    author: str


@app.post('/books', summary='–î–æ–±–∞–≤–∏—Ç—å –Ω–∏–≥–∏', tags=['–î–æ–±–∞–≤–∏—Ç—å –Ω–∏–≥–∏ üìö'])
def create_book(new_book: NewBook):
    books.append({'id': len(books)+1,
                  'title': new_book.title,
                  'author': new_book.author})
    return {'success': True, 'message': '–ö–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞'}


if __name__ == '__main__':
    uvicorn.run('main:app', reload=True)
